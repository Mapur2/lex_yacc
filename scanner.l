%{
#include "y.tab.h"  // For token definitions generated by Yacc
#include <string.h>
#include <stdlib.h>
void yyerror(char *s);
int line_no = 1;  // Track the line number
%}

%%
"print"                { return print; }              // Keyword: print
"exit"                 { return exit_cmd; }           // Keyword: exit
[a-zA-Z][a-zA-Z0-9]*   {
                          if (strlen(yytext) < 10) {
                              strcpy(yylval.id, yytext);  // Copy identifier name to yylval.id
                              return identifier;
                          } else {
                              fprintf(stderr, "Identifier too long at line %d: %s\n", line_no, yytext);
                              yyerror("Identifier exceeds maximum length");
                          }
                      }
[0-9]+                 { yylval.num = atoi(yytext); return number; }  // Numbers
[~]                    { return '~'; }                // End of statement delimiter
[=]                    { return '='; }                // Assignment operator
[+]                    { return '+'; }                
[-]                    { return '-'; }    
[/]                    { return '/'; }                
[*]                    { return '*'; }               
[\t ]                  ;                              
\n                     { line_no++; }                 // Increment line number on newline
.                      { 
                          fprintf(stderr, "Unexpected character '%s' at line %d\n", yytext, line_no);
                          yyerror("Unexpected character");
                      }

%%
int yywrap(void) {
    return 1;
}
